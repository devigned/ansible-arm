
---
- name: Destory Azure Deploy
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Delete deploy
      local_action:
        module: azure_deploy
        state: absent
        subscription_id: cbbdaed0-fea9-4693-bf0c-d446ac93c030
        resource_group_name: dev-ops-cle
        deployment_name: test01

#- name: Create Azure Deploy
#  hosts: 127.0.0.1
#  connection: local
#  tasks:
#    - name: Create deploy
#      local_action:
#        module: azure_deploy
#        state: present
#        subscription_id: cbbdaed0-fea9-4693-bf0c-d446ac93c030
#        resource_group_name: dev-ops-cle
#        deployment_name: test01
#        parameters_link: 'https://raw.githubusercontent.com/devigned/ansible-arm/master/paramters.json'
#        template_link: 'https://github.com/Azure/azure-quickstart-templates/raw/master/101-simple-linux-vm/azuredeploy.json'
#      register: azure
#    - name: Add new instance to host group
#      add_host: hostname={{ item['ips'][0].public_ip }} groupname=launched
#      with_items: azure.instances
#    - name: Wait for SSH to come up
#      wait_for: host={{ item['ips'][0]['dns_settings']['fqdn'] }} port=22 delay=60 timeout=320 state=started
#      with_items: azure.instances

#- name: Create Azure Deploy
#  hosts: 127.0.0.1
#  connection: local
#  tasks:
#    - name: Create deploy
#      local_action:
#        module: azure_deploy
#        state: present
#        subscription_id: cbbdaed0-fea9-4693-bf0c-d446ac93c030
#        resource_group_name: dev-ops-cle
#        deployment_name: test01
#        parameters:
#          newStorageAccountName:
#            value: devopsclestorage
#          adminUsername:
#            value: devopscle
#          adminPassword:
#            value: Password1!
#          dnsNameForPublicIP:
#            value: devopscleazure
#        template_link: 'https://github.com/Azure/azure-quickstart-templates/raw/master/101-simple-linux-vm/azuredeploy.json'

#- name: Create Azure Deploy
#  hosts: 127.0.0.1
#  connection: local
#  tasks:
#    - name: Create deploy
#      local_action:
#        module: azure_deploy
#        state: present
#        subscription_id: cbbdaed0-fea9-4693-bf0c-d446ac93c030
#        resource_group_name: dev-ops-cle
#        deployment_name: test01
#        template:
#          $schema: "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
#          contentVersion: "1.0.0.0"
#          parameters:
#            newStorageAccountName:
#              type: "string"
#              metadata:
#                description: "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
#            adminUsername:
#              type: "string"
#              metadata:
#                description: "User name for the Virtual Machine."
#            adminPassword:
#              type: "securestring"
#              metadata:
#                description: "Password for the Virtual Machine."
#            dnsNameForPublicIP:
#              type: "string"
#              metadata:
#                description: "Unique DNS Name for the Public IP used to access the Virtual Machine."
#            ubuntuOSVersion:
#              type: "string"
#              defaultValue: "14.04.2-LTS"
#              allowedValues:
#                - "12.04.5-LTS"
#                - "14.04.2-LTS"
#                - "15.04"
#              metadata:
#                description: "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.04."
#          variables:
#            location: "West US"
#            imagePublisher: "Canonical"
#            imageOffer: "UbuntuServer"
#            OSDiskName: "osdiskforlinuxsimple"
#            nicName: "myVMNic"
#            addressPrefix: "10.0.0.0/16"
#            subnetName: "Subnet"
#            subnetPrefix: "10.0.0.0/24"
#            storageAccountType: "Standard_LRS"
#            publicIPAddressName: "myPublicIP"
#            publicIPAddressType: "Dynamic"
#            vmStorageAccountContainerName: "vhds"
#            vmName: "MyUbuntuVM"
#            vmSize: "Standard_D1"
#            virtualNetworkName: "MyVNET"
#            vnetID: "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
#            subnetRef: "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
#          resources:
#            -
#              type: "Microsoft.Storage/storageAccounts"
#              name: "[parameters('newStorageAccountName')]"
#              apiVersion: "2015-05-01-preview"
#              location: "[variables('location')]"
#              properties:
#                accountType: "[variables('storageAccountType')]"
#            -
#              apiVersion: "2015-05-01-preview"
#              type: "Microsoft.Network/publicIPAddresses"
#              name: "[variables('publicIPAddressName')]"
#              location: "[variables('location')]"
#              properties:
#                publicIPAllocationMethod: "[variables('publicIPAddressType')]"
#                dnsSettings:
#                  domainNameLabel: "[parameters('dnsNameForPublicIP')]"
#            -
#              type: "Microsoft.Network/virtualNetworks"
#              apiVersion: "2015-05-01-preview"
#              name: "[variables('virtualNetworkName')]"
#              location: "[variables('location')]"
#              properties:
#                addressSpace:
#                  addressPrefixes:
#                    - "[variables('addressPrefix')]"
#                subnets:
#                  -
#                    name: "[variables('subnetName')]"
#                    properties:
#                      addressPrefix: "[variables('subnetPrefix')]"
#            -
#              type: "Microsoft.Network/networkInterfaces"
#              apiVersion: "2015-05-01-preview"
#              name: "[variables('nicName')]"
#              location: "[variables('location')]"
#              dependsOn:
#                - "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
#                - "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
#              properties:
#                ipConfigurations:
#                  -
#                    name: "ipconfig1"
#                    properties:
#                      privateIPAllocationMethod: "Dynamic"
#                      publicIPAddress:
#                        id: "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
#                      subnet:
#                        id: "[variables('subnetRef')]"
#            -
#              type: "Microsoft.Compute/virtualMachines"
#              apiVersion: "2015-06-15"
#              name: "[variables('vmName')]"
#              location: "[variables('location')]"
#              dependsOn:
#                - "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
#                - "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
#              properties:
#                hardwareProfile:
#                  vmSize: "[variables('vmSize')]"
#                osProfile:
#                  computername: "[variables('vmName')]"
#                  adminUsername: "[parameters('adminUsername')]"
#                  adminPassword: "[parameters('adminPassword')]"
#                storageProfile:
#                  imageReference:
#                    publisher: "[variables('imagePublisher')]"
#                    offer: "[variables('imageOffer')]"
#                    sku: "[parameters('ubuntuOSVersion')]"
#                    version: "latest"
#                  osDisk:
#                    name: "osdisk"
#                    vhd:
#                      uri: "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
#                    caching: "ReadWrite"
#                    createOption: "FromImage"
#                networkProfile:
#                  networkInterfaces:
#                    -
#                      id: "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
#                diagnosticsProfile:
#                  bootDiagnostics:
#                    enabled: "true"
#                    storageUri: "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
#        parameters:
#          newStorageAccountName:
#            value: devopsclestorage
#          adminUsername:
#            value: devopscle
#          adminPassword:
#            value: Password1!
#          dnsNameForPublicIP:
#            value: devopscleazure
